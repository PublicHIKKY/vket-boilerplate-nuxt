/* eslint-disable */
/* prettier-ignore */
// @ts-nocheck
// noinspection JSUnusedGlobalSymbols
// Generated by unplugin-auto-import
// biome-ignore lint: disable
export {}
declare global {
  const COOKIE_KEY: typeof import('../app/composables/useLocale')['COOKIE_KEY']
  const EN: typeof import('../app/composables/useLocale')['EN']
  const EffectScope: typeof import('vue')['EffectScope']
  const HaSelectBox: typeof import('../app/components/ha/HaSelectBox.vue')['default']
  const HmButton: typeof import('../app/components/hm/button/HmButton.vue')['default']
  const HmInputDatetime: typeof import('../app/components/hm/input/HmInputDatetime.vue')['default']
  const JA: typeof import('../app/composables/useLocale')['JA']
  const abortNavigation: typeof import('#app')['abortNavigation']
  const addDateTime: typeof import('../app/utils/date-control')['addDateTime']
  const addRouteMiddleware: typeof import('#app')['addRouteMiddleware']
  const cancelIdleCallback: typeof import('#app')['cancelIdleCallback']
  const clearError: typeof import('#app')['clearError']
  const clearNuxtData: typeof import('#app')['clearNuxtData']
  const clearNuxtState: typeof import('#app')['clearNuxtState']
  const computed: typeof import('vue')['computed']
  const constant: typeof import('../app/utils/constant')['constant']
  const convertTimeToUtc: typeof import('../app/utils/date-control')['convertTimeToUtc']
  const createApp: typeof import('vue')['createApp']
  const createError: typeof import('#app')['createError']
  const createUuidV4: typeof import('../app/utils/uuid')['createUuidV4']
  const customRef: typeof import('vue')['customRef']
  const decodeJwt: typeof import('../app/utils/token')['decodeJwt']
  const defaultApi: typeof import('../app/utils/default-api')['default']
  const defaultFetcher: typeof import('../app/composables/useDefaultApi')['defaultFetcher']
  const defaultRepositories: typeof import('../app/utils/default-factory')['defaultRepositories']
  const defaultRepositoryFactory: typeof import('../app/utils/default-factory')['defaultRepositoryFactory']
  const defineAppConfig: typeof import('#app')['defineAppConfig']
  const defineAsyncComponent: typeof import('vue')['defineAsyncComponent']
  const defineComponent: typeof import('vue')['defineComponent']
  const defineI18nConfig: typeof import('#i18n')['defineI18nConfig']
  const defineI18nLocale: typeof import('#i18n')['defineI18nLocale']
  const defineI18nRoute: typeof import('#i18n')['defineI18nRoute']
  const defineNuxtComponent: typeof import('#app')['defineNuxtComponent']
  const defineNuxtLink: typeof import('#app')['defineNuxtLink']
  const defineNuxtPlugin: typeof import('#app')['defineNuxtPlugin']
  const defineNuxtRouteMiddleware: typeof import('#app')['defineNuxtRouteMiddleware']
  const definePayloadPlugin: typeof import('#app')['definePayloadPlugin']
  const definePayloadReducer: typeof import('#app')['definePayloadReducer']
  const definePayloadReviver: typeof import('#app')['definePayloadReviver']
  const diffDays: typeof import('../app/utils/date-control')['diffDays']
  const effectScope: typeof import('vue')['effectScope']
  const ensureAsyncDataOf: typeof import('../app/utils/response')['ensureAsyncDataOf']
  const ensureValueOf: typeof import('../app/utils/zod')['ensureValueOf']
  const equal: typeof import('../app/utils/array')['equal']
  const exampleInjectionKey: typeof import('../app/composables/useExample')['exampleInjectionKey']
  const fetchErrorSchema: typeof import('../app/utils/response')['fetchErrorSchema']
  const fetcher: typeof import('../app/composables/useDefaultApi')['fetcher']
  const formatDate: typeof import('../app/utils/date-control')['formatDate']
  const formatDateUnixTime: typeof import('../app/utils/date-control')['formatDateUnixTime']
  const formatEnglishDate: typeof import('../app/utils/date-control')['formatEnglishDate']
  const formatEnglishDateTime: typeof import('../app/utils/date-control')['formatEnglishDateTime']
  const formatJSTtoLocalTimezone: typeof import('../app/utils/date-control')['formatJSTtoLocalTimezone']
  const formatJapaneseDate: typeof import('../app/utils/date-control')['formatJapaneseDate']
  const formatJapaneseDateTime: typeof import('../app/utils/date-control')['formatJapaneseDateTime']
  const formatLocalTimezoneToJST: typeof import('../app/utils/date-control')['formatLocalTimezoneToJST']
  const getAppManifest: typeof import('#app')['getAppManifest']
  const getCurrentDate: typeof import('../app/utils/date-control')['getCurrentDate']
  const getCurrentInstance: typeof import('vue')['getCurrentInstance']
  const getCurrentScope: typeof import('vue')['getCurrentScope']
  const getDiffTimeByUnit: typeof import('../app/utils/date-control')['getDiffTimeByUnit']
  const getImageUrl: typeof import('../app/utils/image')['getImageUrl']
  const getLocalStorageValue: typeof import('../app/utils/storage-control')['getLocalStorageValue']
  const getLocalTimezone: typeof import('../app/utils/date-control')['getLocalTimezone']
  const getMax: typeof import('../app/utils/zod')['getMax']
  const getRouteRules: typeof import('#app')['getRouteRules']
  const getSessionStorageValue: typeof import('../app/utils/storage-control')['getSessionStorageValue']
  const getSingleCookieValue: typeof import('../app/utils/storage-control')['getSingleCookieValue']
  const h: typeof import('vue')['h']
  const inject: typeof import('vue')['inject']
  const integral: typeof import('../app/utils/zod')['integral']
  const isAfterTargetDate: typeof import('../app/utils/date-control')['isAfterTargetDate']
  const isBeforeTargetDate: typeof import('../app/utils/date-control')['isBeforeTargetDate']
  const isBetweenTargetDates: typeof import('../app/utils/date-control')['isBetweenTargetDates']
  const isFetchError: typeof import('../app/utils/response')['isFetchError']
  const isNuxtEnvironment: typeof import('../app/utils/environment')['isNuxtEnvironment']
  const isNuxtError: typeof import('#app')['isNuxtError']
  const isPrerendered: typeof import('#app')['isPrerendered']
  const isProxy: typeof import('vue')['isProxy']
  const isReactive: typeof import('vue')['isReactive']
  const isReadonly: typeof import('vue')['isReadonly']
  const isRef: typeof import('vue')['isRef']
  const isValueOf: typeof import('../app/utils/zod')['isValueOf']
  const linkViaElement: typeof import('../app/utils/anchor')['linkViaElement']
  const loadPayload: typeof import('#app')['loadPayload']
  const localeInjectionKey: typeof import('../app/composables/useLocale')['localeInjectionKey']
  const makeAnchorElement: typeof import('../app/utils/anchor')['makeAnchorElement']
  const makeRecursiveSchema: typeof import('../app/utils/zod')['makeRecursiveSchema']
  const makeResponseSchema: typeof import('../app/utils/response')['makeResponseSchema']
  const makeSchemaDeepReadOnly: typeof import('../app/utils/zod')['makeSchemaDeepReadOnly']
  const makeSchemaReadOnly: typeof import('../app/utils/zod')['makeSchemaReadOnly']
  const markRaw: typeof import('vue')['markRaw']
  const navigateTo: typeof import('#app')['navigateTo']
  const nextTick: typeof import('vue')['nextTick']
  const objectToValueArray: typeof import('../app/utils/zod')['objectToValueArray']
  const onActivated: typeof import('vue')['onActivated']
  const onBeforeMount: typeof import('vue')['onBeforeMount']
  const onBeforeRouteLeave: typeof import('#app')['onBeforeRouteLeave']
  const onBeforeRouteUpdate: typeof import('#app')['onBeforeRouteUpdate']
  const onBeforeUnmount: typeof import('vue')['onBeforeUnmount']
  const onBeforeUpdate: typeof import('vue')['onBeforeUpdate']
  const onDeactivated: typeof import('vue')['onDeactivated']
  const onErrorCaptured: typeof import('vue')['onErrorCaptured']
  const onMounted: typeof import('vue')['onMounted']
  const onNuxtReady: typeof import('#app')['onNuxtReady']
  const onRenderTracked: typeof import('vue')['onRenderTracked']
  const onRenderTriggered: typeof import('vue')['onRenderTriggered']
  const onScopeDispose: typeof import('vue')['onScopeDispose']
  const onServerPrefetch: typeof import('vue')['onServerPrefetch']
  const onUnmounted: typeof import('vue')['onUnmounted']
  const onUpdated: typeof import('vue')['onUpdated']
  const onWatcherCleanup: typeof import('vue')['onWatcherCleanup']
  const pagingSchema: typeof import('../app/utils/response')['pagingSchema']
  const prefetchComponents: typeof import('#app')['prefetchComponents']
  const preloadComponents: typeof import('#app')['preloadComponents']
  const preloadPayload: typeof import('#app')['preloadPayload']
  const preloadRouteComponents: typeof import('#app')['preloadRouteComponents']
  const prerenderRoutes: typeof import('#app')['prerenderRoutes']
  const provide: typeof import('vue')['provide']
  const raiseError: typeof import('../app/utils/error')['raiseError']
  const range: typeof import('../app/utils/array')['range']
  const reactive: typeof import('vue')['reactive']
  const readFileAsBlob: typeof import('../app/utils/file-control')['readFileAsBlob']
  const readonly: typeof import('vue')['readonly']
  const ref: typeof import('vue')['ref']
  const refreshNuxtData: typeof import('#app')['refreshNuxtData']
  const reloadNuxtApp: typeof import('#app')['reloadNuxtApp']
  const removeLocalStorageValue: typeof import('../app/utils/storage-control')['removeLocalStorageValue']
  const removeSessionStorageValue: typeof import('../app/utils/storage-control')['removeSessionStorageValue']
  const removeSingleCookieValue: typeof import('../app/utils/storage-control')['removeSingleCookieValue']
  const requestIdleCallback: typeof import('#app')['requestIdleCallback']
  const requireAsyncDataOf: typeof import('../app/utils/response')['requireAsyncDataOf']
  const requireValueOf: typeof import('../app/utils/zod')['requireValueOf']
  const resolveComponent: typeof import('vue')['resolveComponent']
  const reversed: typeof import('../app/utils/array')['reversed']
  const setLocalStorageValue: typeof import('../app/utils/storage-control')['setLocalStorageValue']
  const setPageLayout: typeof import('#app')['setPageLayout']
  const setResponseStatus: typeof import('#app')['setResponseStatus']
  const setSessionStorageValue: typeof import('../app/utils/storage-control')['setSessionStorageValue']
  const setSingleCookieValue: typeof import('../app/utils/storage-control')['setSingleCookieValue']
  const shallowReactive: typeof import('vue')['shallowReactive']
  const shallowReadonly: typeof import('vue')['shallowReadonly']
  const shallowRef: typeof import('vue')['shallowRef']
  const showError: typeof import('#app')['showError']
  const sleep: typeof import('../app/utils/sleep')['sleep']
  const statusSchema: typeof import('../app/utils/response')['statusSchema']
  const toImage: typeof import('../app/utils/image')['toImage']
  const toRaw: typeof import('vue')['toRaw']
  const toRef: typeof import('vue')['toRef']
  const toRefs: typeof import('vue')['toRefs']
  const toValue: typeof import('vue')['toValue']
  const toastInjectionKey: typeof import('../app/composables/useToast')['toastInjectionKey']
  const toggleList: typeof import('../app/utils/array')['toggleList']
  const triggerRef: typeof import('vue')['triggerRef']
  const tupleWideningDo: typeof import('../app/utils/tuple')['tupleWideningDo']
  const unreachable: typeof import('../app/utils/error')['unreachable']
  const unref: typeof import('vue')['unref']
  const updateAppConfig: typeof import('#app')['updateAppConfig']
  const useAppConfig: typeof import('#app')['useAppConfig']
  const useAsyncData: typeof import('#app')['useAsyncData']
  const useAttrs: typeof import('vue')['useAttrs']
  const useBrowserLocale: typeof import('#i18n')['useBrowserLocale']
  const useCookie: typeof import('#app')['useCookie']
  const useCookieLocale: typeof import('#i18n')['useCookieLocale']
  const useCssModule: typeof import('vue')['useCssModule']
  const useCssVars: typeof import('vue')['useCssVars']
  const useCustomIntersectionObserver: typeof import('../app/composables/useCustomIntersectionObserver')['default']
  const useDefaultApi: typeof import('../app/composables/useDefaultApi')['default']
  const useError: typeof import('#app')['useError']
  const useExample: typeof import('../app/composables/useExample')['useExample']
  const useFetch: typeof import('#app')['useFetch']
  const useI18n: typeof import('vue-i18n')['useI18n']
  const useId: typeof import('vue')['useId']
  const useIntersectionObserver: typeof import('../app/composables/useIntersectionObserver')['default']
  const useLazyAsyncData: typeof import('#app')['useLazyAsyncData']
  const useLazyFetch: typeof import('#app')['useLazyFetch']
  const useLocale: typeof import('../app/composables/useLocale')['useLocale']
  const useLocaleHead: typeof import('#i18n')['useLocaleHead']
  const useLocalePath: typeof import('#i18n')['useLocalePath']
  const useLocaleRoute: typeof import('#i18n')['useLocaleRoute']
  const useModel: typeof import('vue')['useModel']
  const useNuxtApp: typeof import('#app')['useNuxtApp']
  const useNuxtData: typeof import('#app')['useNuxtData']
  const useRequestEvent: typeof import('#app')['useRequestEvent']
  const useRequestFetch: typeof import('#app')['useRequestFetch']
  const useRequestHeaders: typeof import('#app')['useRequestHeaders']
  const useRequestURL: typeof import('#app')['useRequestURL']
  const useRoute: typeof import('#app')['useRoute']
  const useRouteBaseName: typeof import('#i18n')['useRouteBaseName']
  const useRouter: typeof import('#app')['useRouter']
  const useRuntimeConfig: typeof import('#app')['useRuntimeConfig']
  const useSlots: typeof import('vue')['useSlots']
  const useSocialShareLink: typeof import('../app/composables/useSocialShareLink')['default']
  const useState: typeof import('#app')['useState']
  const useSwitchLocalePath: typeof import('#i18n')['useSwitchLocalePath']
  const useTemplateRef: typeof import('vue')['useTemplateRef']
  const useToast: typeof import('../app/composables/useToast')['default']
  const useValidationRules: typeof import('../app/composables/useValidationRules')['default']
  const waitEffect: typeof import('../app/utils/sleep')['waitEffect']
  const watch: typeof import('vue')['watch']
  const watchEffect: typeof import('vue')['watchEffect']
  const watchPostEffect: typeof import('vue')['watchPostEffect']
  const watchSyncEffect: typeof import('vue')['watchSyncEffect']
  const writableClone: typeof import('../app/utils/object')['writableClone']
  const zip: typeof import('../app/utils/array')['zip']
}
// for type re-export
declare global {
  // @ts-ignore
  export type { Component, ComponentPublicInstance, ComputedRef, DirectiveBinding, ExtractDefaultPropTypes, ExtractPropTypes, ExtractPublicPropTypes, InjectionKey, PropType, Ref, MaybeRef, MaybeRefOrGetter, VNode, WritableComputedRef } from 'vue'
  import('vue')
  // @ts-ignore
  export type { Example, ExampleComposable } from '../app/composables/useExample'
  import('../app/composables/useExample')
  // @ts-ignore
  export type { Lang, LocaleComposable } from '../app/composables/useLocale'
  import('../app/composables/useLocale')
  // @ts-ignore
  export type { ToastComposable } from '../app/composables/useToast'
  import('../app/composables/useToast')
  // @ts-ignore
  export type { Method } from '../app/utils/default-api'
  import('../app/utils/default-api')
  // @ts-ignore
  export type { ApiAccess, MakeRepository, DefaultRepository, DefaultRepositories, DefaultRepositoryKey } from '../app/utils/default-factory'
  import('../app/utils/default-factory')
  // @ts-ignore
  export type { ResponseStatus, Paging, AsyncDataResponse } from '../app/utils/response'
  import('../app/utils/response')
  // @ts-ignore
  export type { Nullable, ValueOf, Overwrite } from '../app/utils/types/types'
  import('../app/utils/types/types')
  // @ts-ignore
  export type { Self } from '../app/utils/zod'
  import('../app/utils/zod')
}
